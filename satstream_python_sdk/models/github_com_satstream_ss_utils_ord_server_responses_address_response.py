# coding: utf-8

"""
    Satstream API

    Satstream API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: team@satstream.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'inscriptions': 'list[str]',
        'outputs': 'list[str]',
        'runes_balances': 'list[GithubComSatstreamSsUtilsOrdServerResponsesRunesBalance]',
        'sat_balance': 'int'
    }

    attribute_map = {
        'inscriptions': 'inscriptions',
        'outputs': 'outputs',
        'runes_balances': 'runes_balances',
        'sat_balance': 'sat_balance'
    }

    def __init__(self, inscriptions=None, outputs=None, runes_balances=None, sat_balance=None):  # noqa: E501
        """GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse - a model defined in Swagger"""  # noqa: E501
        self._inscriptions = None
        self._outputs = None
        self._runes_balances = None
        self._sat_balance = None
        self.discriminator = None
        if inscriptions is not None:
            self.inscriptions = inscriptions
        if outputs is not None:
            self.outputs = outputs
        if runes_balances is not None:
            self.runes_balances = runes_balances
        if sat_balance is not None:
            self.sat_balance = sat_balance

    @property
    def inscriptions(self):
        """Gets the inscriptions of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501


        :return: The inscriptions of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._inscriptions

    @inscriptions.setter
    def inscriptions(self, inscriptions):
        """Sets the inscriptions of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.


        :param inscriptions: The inscriptions of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :type: list[str]
        """

        self._inscriptions = inscriptions

    @property
    def outputs(self):
        """Gets the outputs of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501


        :return: The outputs of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.


        :param outputs: The outputs of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :type: list[str]
        """

        self._outputs = outputs

    @property
    def runes_balances(self):
        """Gets the runes_balances of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501


        :return: The runes_balances of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :rtype: list[GithubComSatstreamSsUtilsOrdServerResponsesRunesBalance]
        """
        return self._runes_balances

    @runes_balances.setter
    def runes_balances(self, runes_balances):
        """Sets the runes_balances of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.


        :param runes_balances: The runes_balances of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :type: list[GithubComSatstreamSsUtilsOrdServerResponsesRunesBalance]
        """

        self._runes_balances = runes_balances

    @property
    def sat_balance(self):
        """Gets the sat_balance of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501


        :return: The sat_balance of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :rtype: int
        """
        return self._sat_balance

    @sat_balance.setter
    def sat_balance(self, sat_balance):
        """Sets the sat_balance of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.


        :param sat_balance: The sat_balance of this GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse.  # noqa: E501
        :type: int
        """

        self._sat_balance = sat_balance

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GithubComSatstreamSsUtilsOrdServerResponsesAddressResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
