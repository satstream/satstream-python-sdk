# coding: utf-8

"""
    Satstream API

    Satstream API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: team@satstream.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GithubComSatstreamSsUtilsBitcoinCliFeeRange(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'endrange': 'float',
        'inmempool': 'float',
        'leftmempool': 'float',
        'startrange': 'float',
        'totalconfirmed': 'float',
        'withintarget': 'float'
    }

    attribute_map = {
        'endrange': 'endrange',
        'inmempool': 'inmempool',
        'leftmempool': 'leftmempool',
        'startrange': 'startrange',
        'totalconfirmed': 'totalconfirmed',
        'withintarget': 'withintarget'
    }

    def __init__(self, endrange=None, inmempool=None, leftmempool=None, startrange=None, totalconfirmed=None, withintarget=None):  # noqa: E501
        """GithubComSatstreamSsUtilsBitcoinCliFeeRange - a model defined in Swagger"""  # noqa: E501
        self._endrange = None
        self._inmempool = None
        self._leftmempool = None
        self._startrange = None
        self._totalconfirmed = None
        self._withintarget = None
        self.discriminator = None
        if endrange is not None:
            self.endrange = endrange
        if inmempool is not None:
            self.inmempool = inmempool
        if leftmempool is not None:
            self.leftmempool = leftmempool
        if startrange is not None:
            self.startrange = startrange
        if totalconfirmed is not None:
            self.totalconfirmed = totalconfirmed
        if withintarget is not None:
            self.withintarget = withintarget

    @property
    def endrange(self):
        """Gets the endrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501

        End of feerate range  # noqa: E501

        :return: The endrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :rtype: float
        """
        return self._endrange

    @endrange.setter
    def endrange(self, endrange):
        """Sets the endrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.

        End of feerate range  # noqa: E501

        :param endrange: The endrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :type: float
        """

        self._endrange = endrange

    @property
    def inmempool(self):
        """Gets the inmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501

        Current number of txs in mempool unconfirmed  # noqa: E501

        :return: The inmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :rtype: float
        """
        return self._inmempool

    @inmempool.setter
    def inmempool(self, inmempool):
        """Sets the inmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.

        Current number of txs in mempool unconfirmed  # noqa: E501

        :param inmempool: The inmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :type: float
        """

        self._inmempool = inmempool

    @property
    def leftmempool(self):
        """Gets the leftmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501

        Number of txs that left mempool unconfirmed  # noqa: E501

        :return: The leftmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :rtype: float
        """
        return self._leftmempool

    @leftmempool.setter
    def leftmempool(self, leftmempool):
        """Sets the leftmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.

        Number of txs that left mempool unconfirmed  # noqa: E501

        :param leftmempool: The leftmempool of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :type: float
        """

        self._leftmempool = leftmempool

    @property
    def startrange(self):
        """Gets the startrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501

        Start of feerate range  # noqa: E501

        :return: The startrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :rtype: float
        """
        return self._startrange

    @startrange.setter
    def startrange(self, startrange):
        """Sets the startrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.

        Start of feerate range  # noqa: E501

        :param startrange: The startrange of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :type: float
        """

        self._startrange = startrange

    @property
    def totalconfirmed(self):
        """Gets the totalconfirmed of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501

        Total number of txs confirmed  # noqa: E501

        :return: The totalconfirmed of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :rtype: float
        """
        return self._totalconfirmed

    @totalconfirmed.setter
    def totalconfirmed(self, totalconfirmed):
        """Sets the totalconfirmed of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.

        Total number of txs confirmed  # noqa: E501

        :param totalconfirmed: The totalconfirmed of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :type: float
        """

        self._totalconfirmed = totalconfirmed

    @property
    def withintarget(self):
        """Gets the withintarget of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501

        Number of txs confirmed within target  # noqa: E501

        :return: The withintarget of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :rtype: float
        """
        return self._withintarget

    @withintarget.setter
    def withintarget(self, withintarget):
        """Sets the withintarget of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.

        Number of txs confirmed within target  # noqa: E501

        :param withintarget: The withintarget of this GithubComSatstreamSsUtilsBitcoinCliFeeRange.  # noqa: E501
        :type: float
        """

        self._withintarget = withintarget

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GithubComSatstreamSsUtilsBitcoinCliFeeRange, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GithubComSatstreamSsUtilsBitcoinCliFeeRange):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
