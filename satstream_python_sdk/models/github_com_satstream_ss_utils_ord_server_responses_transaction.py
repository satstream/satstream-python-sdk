# coding: utf-8

"""
    Satstream API

    Satstream API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: team@satstream.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GithubComSatstreamSsUtilsOrdServerResponsesTransaction(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'input': 'list[GithubComSatstreamSsUtilsOrdServerResponsesInput]',
        'lock_time': 'int',
        'output': 'list[GithubComSatstreamSsUtilsOrdServerResponsesOutput]',
        'version': 'int'
    }

    attribute_map = {
        'input': 'input',
        'lock_time': 'lock_time',
        'output': 'output',
        'version': 'version'
    }

    def __init__(self, input=None, lock_time=None, output=None, version=None):  # noqa: E501
        """GithubComSatstreamSsUtilsOrdServerResponsesTransaction - a model defined in Swagger"""  # noqa: E501
        self._input = None
        self._lock_time = None
        self._output = None
        self._version = None
        self.discriminator = None
        if input is not None:
            self.input = input
        if lock_time is not None:
            self.lock_time = lock_time
        if output is not None:
            self.output = output
        if version is not None:
            self.version = version

    @property
    def input(self):
        """Gets the input of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501


        :return: The input of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :rtype: list[GithubComSatstreamSsUtilsOrdServerResponsesInput]
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.


        :param input: The input of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :type: list[GithubComSatstreamSsUtilsOrdServerResponsesInput]
        """

        self._input = input

    @property
    def lock_time(self):
        """Gets the lock_time of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501


        :return: The lock_time of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :rtype: int
        """
        return self._lock_time

    @lock_time.setter
    def lock_time(self, lock_time):
        """Sets the lock_time of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.


        :param lock_time: The lock_time of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :type: int
        """

        self._lock_time = lock_time

    @property
    def output(self):
        """Gets the output of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501


        :return: The output of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :rtype: list[GithubComSatstreamSsUtilsOrdServerResponsesOutput]
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.


        :param output: The output of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :type: list[GithubComSatstreamSsUtilsOrdServerResponsesOutput]
        """

        self._output = output

    @property
    def version(self):
        """Gets the version of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501


        :return: The version of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.


        :param version: The version of this GithubComSatstreamSsUtilsOrdServerResponsesTransaction.  # noqa: E501
        :type: int
        """

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GithubComSatstreamSsUtilsOrdServerResponsesTransaction, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GithubComSatstreamSsUtilsOrdServerResponsesTransaction):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
