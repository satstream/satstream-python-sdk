# coding: utf-8

"""
    Satstream API

    Satstream API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: team@satstream.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GithubComSatstreamSsUtilsBitcoinCliBlockStats(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'avgfee': 'float',
        'avgfeerate': 'float',
        'avgtxsize': 'float',
        'blockhash': 'str',
        'feerate_percentiles': 'list[float]',
        'height': 'int',
        'ins': 'int',
        'maxfee': 'float',
        'maxfeerate': 'float',
        'maxtxsize': 'int',
        'medianfee': 'float',
        'mediantime': 'int',
        'mediantxsize': 'int',
        'minfee': 'float',
        'minfeerate': 'float',
        'mintxsize': 'int',
        'outs': 'int',
        'subsidy': 'float',
        'swtotal_size': 'int',
        'swtotal_weight': 'int',
        'swtxs': 'int',
        'time': 'int',
        'total_out': 'float',
        'total_size': 'int',
        'total_weight': 'int',
        'totalfee': 'float',
        'txs': 'int',
        'utxo_increase': 'int',
        'utxo_size_inc': 'int'
    }

    attribute_map = {
        'avgfee': 'avgfee',
        'avgfeerate': 'avgfeerate',
        'avgtxsize': 'avgtxsize',
        'blockhash': 'blockhash',
        'feerate_percentiles': 'feerate_percentiles',
        'height': 'height',
        'ins': 'ins',
        'maxfee': 'maxfee',
        'maxfeerate': 'maxfeerate',
        'maxtxsize': 'maxtxsize',
        'medianfee': 'medianfee',
        'mediantime': 'mediantime',
        'mediantxsize': 'mediantxsize',
        'minfee': 'minfee',
        'minfeerate': 'minfeerate',
        'mintxsize': 'mintxsize',
        'outs': 'outs',
        'subsidy': 'subsidy',
        'swtotal_size': 'swtotal_size',
        'swtotal_weight': 'swtotal_weight',
        'swtxs': 'swtxs',
        'time': 'time',
        'total_out': 'total_out',
        'total_size': 'total_size',
        'total_weight': 'total_weight',
        'totalfee': 'totalfee',
        'txs': 'txs',
        'utxo_increase': 'utxo_increase',
        'utxo_size_inc': 'utxo_size_inc'
    }

    def __init__(self, avgfee=None, avgfeerate=None, avgtxsize=None, blockhash=None, feerate_percentiles=None, height=None, ins=None, maxfee=None, maxfeerate=None, maxtxsize=None, medianfee=None, mediantime=None, mediantxsize=None, minfee=None, minfeerate=None, mintxsize=None, outs=None, subsidy=None, swtotal_size=None, swtotal_weight=None, swtxs=None, time=None, total_out=None, total_size=None, total_weight=None, totalfee=None, txs=None, utxo_increase=None, utxo_size_inc=None):  # noqa: E501
        """GithubComSatstreamSsUtilsBitcoinCliBlockStats - a model defined in Swagger"""  # noqa: E501
        self._avgfee = None
        self._avgfeerate = None
        self._avgtxsize = None
        self._blockhash = None
        self._feerate_percentiles = None
        self._height = None
        self._ins = None
        self._maxfee = None
        self._maxfeerate = None
        self._maxtxsize = None
        self._medianfee = None
        self._mediantime = None
        self._mediantxsize = None
        self._minfee = None
        self._minfeerate = None
        self._mintxsize = None
        self._outs = None
        self._subsidy = None
        self._swtotal_size = None
        self._swtotal_weight = None
        self._swtxs = None
        self._time = None
        self._total_out = None
        self._total_size = None
        self._total_weight = None
        self._totalfee = None
        self._txs = None
        self._utxo_increase = None
        self._utxo_size_inc = None
        self.discriminator = None
        if avgfee is not None:
            self.avgfee = avgfee
        if avgfeerate is not None:
            self.avgfeerate = avgfeerate
        if avgtxsize is not None:
            self.avgtxsize = avgtxsize
        if blockhash is not None:
            self.blockhash = blockhash
        if feerate_percentiles is not None:
            self.feerate_percentiles = feerate_percentiles
        if height is not None:
            self.height = height
        if ins is not None:
            self.ins = ins
        if maxfee is not None:
            self.maxfee = maxfee
        if maxfeerate is not None:
            self.maxfeerate = maxfeerate
        if maxtxsize is not None:
            self.maxtxsize = maxtxsize
        if medianfee is not None:
            self.medianfee = medianfee
        if mediantime is not None:
            self.mediantime = mediantime
        if mediantxsize is not None:
            self.mediantxsize = mediantxsize
        if minfee is not None:
            self.minfee = minfee
        if minfeerate is not None:
            self.minfeerate = minfeerate
        if mintxsize is not None:
            self.mintxsize = mintxsize
        if outs is not None:
            self.outs = outs
        if subsidy is not None:
            self.subsidy = subsidy
        if swtotal_size is not None:
            self.swtotal_size = swtotal_size
        if swtotal_weight is not None:
            self.swtotal_weight = swtotal_weight
        if swtxs is not None:
            self.swtxs = swtxs
        if time is not None:
            self.time = time
        if total_out is not None:
            self.total_out = total_out
        if total_size is not None:
            self.total_size = total_size
        if total_weight is not None:
            self.total_weight = total_weight
        if totalfee is not None:
            self.totalfee = totalfee
        if txs is not None:
            self.txs = txs
        if utxo_increase is not None:
            self.utxo_increase = utxo_increase
        if utxo_size_inc is not None:
            self.utxo_size_inc = utxo_size_inc

    @property
    def avgfee(self):
        """Gets the avgfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Average fee in the block  # noqa: E501

        :return: The avgfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._avgfee

    @avgfee.setter
    def avgfee(self, avgfee):
        """Sets the avgfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Average fee in the block  # noqa: E501

        :param avgfee: The avgfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._avgfee = avgfee

    @property
    def avgfeerate(self):
        """Gets the avgfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Average feerate (in satoshis per virtual byte)  # noqa: E501

        :return: The avgfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._avgfeerate

    @avgfeerate.setter
    def avgfeerate(self, avgfeerate):
        """Sets the avgfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Average feerate (in satoshis per virtual byte)  # noqa: E501

        :param avgfeerate: The avgfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._avgfeerate = avgfeerate

    @property
    def avgtxsize(self):
        """Gets the avgtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Average transaction size  # noqa: E501

        :return: The avgtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._avgtxsize

    @avgtxsize.setter
    def avgtxsize(self, avgtxsize):
        """Sets the avgtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Average transaction size  # noqa: E501

        :param avgtxsize: The avgtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._avgtxsize = avgtxsize

    @property
    def blockhash(self):
        """Gets the blockhash of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The block hash (to check for potential reorgs)  # noqa: E501

        :return: The blockhash of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: str
        """
        return self._blockhash

    @blockhash.setter
    def blockhash(self, blockhash):
        """Sets the blockhash of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The block hash (to check for potential reorgs)  # noqa: E501

        :param blockhash: The blockhash of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: str
        """

        self._blockhash = blockhash

    @property
    def feerate_percentiles(self):
        """Gets the feerate_percentiles of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Feerates at the 10th, 25th, 50th, 75th, and 90th percentile  # noqa: E501

        :return: The feerate_percentiles of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: list[float]
        """
        return self._feerate_percentiles

    @feerate_percentiles.setter
    def feerate_percentiles(self, feerate_percentiles):
        """Sets the feerate_percentiles of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Feerates at the 10th, 25th, 50th, 75th, and 90th percentile  # noqa: E501

        :param feerate_percentiles: The feerate_percentiles of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: list[float]
        """

        self._feerate_percentiles = feerate_percentiles

    @property
    def height(self):
        """Gets the height of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The height of the block  # noqa: E501

        :return: The height of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The height of the block  # noqa: E501

        :param height: The height of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._height = height

    @property
    def ins(self):
        """Gets the ins of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The number of inputs (excluding coinbase)  # noqa: E501

        :return: The ins of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._ins

    @ins.setter
    def ins(self, ins):
        """Sets the ins of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The number of inputs (excluding coinbase)  # noqa: E501

        :param ins: The ins of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._ins = ins

    @property
    def maxfee(self):
        """Gets the maxfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Maximum fee in the block  # noqa: E501

        :return: The maxfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._maxfee

    @maxfee.setter
    def maxfee(self, maxfee):
        """Sets the maxfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Maximum fee in the block  # noqa: E501

        :param maxfee: The maxfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._maxfee = maxfee

    @property
    def maxfeerate(self):
        """Gets the maxfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Maximum feerate (in satoshis per virtual byte)  # noqa: E501

        :return: The maxfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._maxfeerate

    @maxfeerate.setter
    def maxfeerate(self, maxfeerate):
        """Sets the maxfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Maximum feerate (in satoshis per virtual byte)  # noqa: E501

        :param maxfeerate: The maxfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._maxfeerate = maxfeerate

    @property
    def maxtxsize(self):
        """Gets the maxtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Maximum transaction size  # noqa: E501

        :return: The maxtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._maxtxsize

    @maxtxsize.setter
    def maxtxsize(self, maxtxsize):
        """Sets the maxtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Maximum transaction size  # noqa: E501

        :param maxtxsize: The maxtxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._maxtxsize = maxtxsize

    @property
    def medianfee(self):
        """Gets the medianfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Truncated median fee in the block  # noqa: E501

        :return: The medianfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._medianfee

    @medianfee.setter
    def medianfee(self, medianfee):
        """Sets the medianfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Truncated median fee in the block  # noqa: E501

        :param medianfee: The medianfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._medianfee = medianfee

    @property
    def mediantime(self):
        """Gets the mediantime of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The block median time past  # noqa: E501

        :return: The mediantime of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._mediantime

    @mediantime.setter
    def mediantime(self, mediantime):
        """Sets the mediantime of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The block median time past  # noqa: E501

        :param mediantime: The mediantime of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._mediantime = mediantime

    @property
    def mediantxsize(self):
        """Gets the mediantxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Truncated median transaction size  # noqa: E501

        :return: The mediantxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._mediantxsize

    @mediantxsize.setter
    def mediantxsize(self, mediantxsize):
        """Sets the mediantxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Truncated median transaction size  # noqa: E501

        :param mediantxsize: The mediantxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._mediantxsize = mediantxsize

    @property
    def minfee(self):
        """Gets the minfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Minimum fee in the block  # noqa: E501

        :return: The minfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._minfee

    @minfee.setter
    def minfee(self, minfee):
        """Sets the minfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Minimum fee in the block  # noqa: E501

        :param minfee: The minfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._minfee = minfee

    @property
    def minfeerate(self):
        """Gets the minfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Minimum feerate (in satoshis per virtual byte)  # noqa: E501

        :return: The minfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._minfeerate

    @minfeerate.setter
    def minfeerate(self, minfeerate):
        """Sets the minfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Minimum feerate (in satoshis per virtual byte)  # noqa: E501

        :param minfeerate: The minfeerate of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._minfeerate = minfeerate

    @property
    def mintxsize(self):
        """Gets the mintxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Minimum transaction size  # noqa: E501

        :return: The mintxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._mintxsize

    @mintxsize.setter
    def mintxsize(self, mintxsize):
        """Sets the mintxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Minimum transaction size  # noqa: E501

        :param mintxsize: The mintxsize of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._mintxsize = mintxsize

    @property
    def outs(self):
        """Gets the outs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The number of outputs  # noqa: E501

        :return: The outs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._outs

    @outs.setter
    def outs(self, outs):
        """Sets the outs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The number of outputs  # noqa: E501

        :param outs: The outs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._outs = outs

    @property
    def subsidy(self):
        """Gets the subsidy of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The block subsidy  # noqa: E501

        :return: The subsidy of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._subsidy

    @subsidy.setter
    def subsidy(self, subsidy):
        """Sets the subsidy of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The block subsidy  # noqa: E501

        :param subsidy: The subsidy of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._subsidy = subsidy

    @property
    def swtotal_size(self):
        """Gets the swtotal_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Total size of all segwit transactions  # noqa: E501

        :return: The swtotal_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._swtotal_size

    @swtotal_size.setter
    def swtotal_size(self, swtotal_size):
        """Sets the swtotal_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Total size of all segwit transactions  # noqa: E501

        :param swtotal_size: The swtotal_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._swtotal_size = swtotal_size

    @property
    def swtotal_weight(self):
        """Gets the swtotal_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Total weight of all segwit transactions  # noqa: E501

        :return: The swtotal_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._swtotal_weight

    @swtotal_weight.setter
    def swtotal_weight(self, swtotal_weight):
        """Sets the swtotal_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Total weight of all segwit transactions  # noqa: E501

        :param swtotal_weight: The swtotal_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._swtotal_weight = swtotal_weight

    @property
    def swtxs(self):
        """Gets the swtxs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The number of segwit transactions  # noqa: E501

        :return: The swtxs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._swtxs

    @swtxs.setter
    def swtxs(self, swtxs):
        """Sets the swtxs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The number of segwit transactions  # noqa: E501

        :param swtxs: The swtxs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._swtxs = swtxs

    @property
    def time(self):
        """Gets the time of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The block time  # noqa: E501

        :return: The time of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The block time  # noqa: E501

        :param time: The time of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._time = time

    @property
    def total_out(self):
        """Gets the total_out of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Total amount in all outputs  # noqa: E501

        :return: The total_out of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._total_out

    @total_out.setter
    def total_out(self, total_out):
        """Sets the total_out of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Total amount in all outputs  # noqa: E501

        :param total_out: The total_out of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._total_out = total_out

    @property
    def total_size(self):
        """Gets the total_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Total size of all non-coinbase transactions  # noqa: E501

        :return: The total_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Total size of all non-coinbase transactions  # noqa: E501

        :param total_size: The total_size of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._total_size = total_size

    @property
    def total_weight(self):
        """Gets the total_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        Total weight of all non-coinbase transactions  # noqa: E501

        :return: The total_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._total_weight

    @total_weight.setter
    def total_weight(self, total_weight):
        """Sets the total_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        Total weight of all non-coinbase transactions  # noqa: E501

        :param total_weight: The total_weight of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._total_weight = total_weight

    @property
    def totalfee(self):
        """Gets the totalfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The fee total  # noqa: E501

        :return: The totalfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: float
        """
        return self._totalfee

    @totalfee.setter
    def totalfee(self, totalfee):
        """Sets the totalfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The fee total  # noqa: E501

        :param totalfee: The totalfee of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: float
        """

        self._totalfee = totalfee

    @property
    def txs(self):
        """Gets the txs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The number of transactions (excluding coinbase)  # noqa: E501

        :return: The txs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._txs

    @txs.setter
    def txs(self, txs):
        """Sets the txs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The number of transactions (excluding coinbase)  # noqa: E501

        :param txs: The txs of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._txs = txs

    @property
    def utxo_increase(self):
        """Gets the utxo_increase of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The increase/decrease in the number of unspent outputs  # noqa: E501

        :return: The utxo_increase of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._utxo_increase

    @utxo_increase.setter
    def utxo_increase(self, utxo_increase):
        """Sets the utxo_increase of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The increase/decrease in the number of unspent outputs  # noqa: E501

        :param utxo_increase: The utxo_increase of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._utxo_increase = utxo_increase

    @property
    def utxo_size_inc(self):
        """Gets the utxo_size_inc of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501

        The increase/decrease in size for the utxo index  # noqa: E501

        :return: The utxo_size_inc of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :rtype: int
        """
        return self._utxo_size_inc

    @utxo_size_inc.setter
    def utxo_size_inc(self, utxo_size_inc):
        """Sets the utxo_size_inc of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.

        The increase/decrease in size for the utxo index  # noqa: E501

        :param utxo_size_inc: The utxo_size_inc of this GithubComSatstreamSsUtilsBitcoinCliBlockStats.  # noqa: E501
        :type: int
        """

        self._utxo_size_inc = utxo_size_inc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GithubComSatstreamSsUtilsBitcoinCliBlockStats, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GithubComSatstreamSsUtilsBitcoinCliBlockStats):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
