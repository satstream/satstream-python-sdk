# coding: utf-8

"""
    Satstream API

    Satstream API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: team@satstream.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ResponsesGetAddressNonInscriptionUTXOData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cursor': 'int',
        'total': 'int',
        'total_confirmed': 'int',
        'total_runes': 'int',
        'total_unconfirmed': 'int',
        'total_unconfirmed_spend': 'int',
        'utxo': 'list[ResponsesNonInscriptionUTXO]'
    }

    attribute_map = {
        'cursor': 'cursor',
        'total': 'total',
        'total_confirmed': 'totalConfirmed',
        'total_runes': 'totalRunes',
        'total_unconfirmed': 'totalUnconfirmed',
        'total_unconfirmed_spend': 'totalUnconfirmedSpend',
        'utxo': 'utxo'
    }

    def __init__(self, cursor=None, total=None, total_confirmed=None, total_runes=None, total_unconfirmed=None, total_unconfirmed_spend=None, utxo=None):  # noqa: E501
        """ResponsesGetAddressNonInscriptionUTXOData - a model defined in Swagger"""  # noqa: E501
        self._cursor = None
        self._total = None
        self._total_confirmed = None
        self._total_runes = None
        self._total_unconfirmed = None
        self._total_unconfirmed_spend = None
        self._utxo = None
        self.discriminator = None
        if cursor is not None:
            self.cursor = cursor
        if total is not None:
            self.total = total
        if total_confirmed is not None:
            self.total_confirmed = total_confirmed
        if total_runes is not None:
            self.total_runes = total_runes
        if total_unconfirmed is not None:
            self.total_unconfirmed = total_unconfirmed
        if total_unconfirmed_spend is not None:
            self.total_unconfirmed_spend = total_unconfirmed_spend
        if utxo is not None:
            self.utxo = utxo

    @property
    def cursor(self):
        """Gets the cursor of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501


        :return: The cursor of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :rtype: int
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this ResponsesGetAddressNonInscriptionUTXOData.


        :param cursor: The cursor of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :type: int
        """

        self._cursor = cursor

    @property
    def total(self):
        """Gets the total of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501


        :return: The total of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ResponsesGetAddressNonInscriptionUTXOData.


        :param total: The total of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :type: int
        """

        self._total = total

    @property
    def total_confirmed(self):
        """Gets the total_confirmed of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501


        :return: The total_confirmed of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :rtype: int
        """
        return self._total_confirmed

    @total_confirmed.setter
    def total_confirmed(self, total_confirmed):
        """Sets the total_confirmed of this ResponsesGetAddressNonInscriptionUTXOData.


        :param total_confirmed: The total_confirmed of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :type: int
        """

        self._total_confirmed = total_confirmed

    @property
    def total_runes(self):
        """Gets the total_runes of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501


        :return: The total_runes of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :rtype: int
        """
        return self._total_runes

    @total_runes.setter
    def total_runes(self, total_runes):
        """Sets the total_runes of this ResponsesGetAddressNonInscriptionUTXOData.


        :param total_runes: The total_runes of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :type: int
        """

        self._total_runes = total_runes

    @property
    def total_unconfirmed(self):
        """Gets the total_unconfirmed of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501


        :return: The total_unconfirmed of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :rtype: int
        """
        return self._total_unconfirmed

    @total_unconfirmed.setter
    def total_unconfirmed(self, total_unconfirmed):
        """Sets the total_unconfirmed of this ResponsesGetAddressNonInscriptionUTXOData.


        :param total_unconfirmed: The total_unconfirmed of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :type: int
        """

        self._total_unconfirmed = total_unconfirmed

    @property
    def total_unconfirmed_spend(self):
        """Gets the total_unconfirmed_spend of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501


        :return: The total_unconfirmed_spend of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :rtype: int
        """
        return self._total_unconfirmed_spend

    @total_unconfirmed_spend.setter
    def total_unconfirmed_spend(self, total_unconfirmed_spend):
        """Sets the total_unconfirmed_spend of this ResponsesGetAddressNonInscriptionUTXOData.


        :param total_unconfirmed_spend: The total_unconfirmed_spend of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :type: int
        """

        self._total_unconfirmed_spend = total_unconfirmed_spend

    @property
    def utxo(self):
        """Gets the utxo of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501


        :return: The utxo of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :rtype: list[ResponsesNonInscriptionUTXO]
        """
        return self._utxo

    @utxo.setter
    def utxo(self, utxo):
        """Sets the utxo of this ResponsesGetAddressNonInscriptionUTXOData.


        :param utxo: The utxo of this ResponsesGetAddressNonInscriptionUTXOData.  # noqa: E501
        :type: list[ResponsesNonInscriptionUTXO]
        """

        self._utxo = utxo

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ResponsesGetAddressNonInscriptionUTXOData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResponsesGetAddressNonInscriptionUTXOData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
